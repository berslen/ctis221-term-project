package UI;

import Products.IProduct;
import Products.MediumType;
import Products.ProductSystem;
import Products.ProductType;
import Users.UserSystem;
import Utils.UiUtils;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class StoreScreen extends javax.swing.JFrame {

    private Map<Integer, Integer> tableIndexToProductIdMap = new HashMap<>();

    public StoreScreen() {

        initComponents();

        
        // product type combobox fill
        productType.setModel(new DefaultComboBoxModel(ProductType.values()));
    }

    private void fillTheTable(MediumType medium, ProductType type) {
        itemTable.removeAll();
        ArrayList<IProduct> allProducts = ProductSystem.getAllProducts(medium, type);

        DefaultTableModel dtm = (DefaultTableModel) itemTable.getModel();

        for (int i = 0; i < allProducts.size(); i++) {
            IProduct it = allProducts.get(i);
            tableIndexToProductIdMap.put(i, it.getProductId());
            dtm.addRow(UiUtils.convertProductToRowItem(it));
        }
    }

    private void refreshTableWithFilters() {
        fillTheTable(getSelectedMediumType(), getSelectedProductType());
    }

    private MediumType getSelectedMediumType() {
        MediumType medium = MediumType.Physical;
        if (digitalMedium.isSelected()) {
            medium = MediumType.Digital;
        }

        return medium;
    }

    private ProductType getSelectedProductType() {
        return (ProductType) productType.getSelectedItem();
    }

    private IProduct getSelectedProduct() {
        int selectedIndex = itemTable.getSelectedRow();

        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(null, "Nothing is selected.");
            return null;
        }

        Integer selectedId = tableIndexToProductIdMap.get(selectedIndex);

        if (selectedId == null) {
            JOptionPane.showMessageDialog(null, "Cannot find the product associated with the selected row.");
            return null;
        }

        IProduct selectedProduct = ProductSystem.searchProduct(selectedId);

        if (selectedProduct == null) {
            JOptionPane.showMessageDialog(null, "Product is null.");
            return null;
        }

        return selectedProduct;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        productType = new javax.swing.JComboBox<>();
        buyButton = new javax.swing.JButton();
        searchInput = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        digitalMedium = new javax.swing.JRadioButton();
        phsyicalMedium = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        usernameOutput = new javax.swing.JLabel();
        output = new javax.swing.JLabel();
        addProductButton = new javax.swing.JButton();
        inventoryButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Store");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        productType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productTypeActionPerformed(evt);
            }
        });

        buyButton.setText("BUY");

        searchInput.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        searchButton.setText("SEARCH ðŸ”Ž");

        jLabel1.setText("PRODUCT TYPE");

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", "", "", null},
                {null, null, "", null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Product Name", "Genre", "Language", "Publisher", "Release Date", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(itemTable);

        jLabel2.setText("MEDIUM TYPE");

        buttonGroup1.add(digitalMedium);
        digitalMedium.setSelected(true);
        digitalMedium.setText("Digital");
        digitalMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                digitalMediumActionPerformed(evt);
            }
        });

        buttonGroup1.add(phsyicalMedium);
        phsyicalMedium.setText("Physical");
        phsyicalMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phsyicalMediumActionPerformed(evt);
            }
        });

        jLabel3.setText("WELCOME");

        usernameOutput.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        usernameOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        output.setText("output panel");

        addProductButton.setText("ADD PRODUCT");
        addProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductButtonActionPerformed(evt);
            }
        });

        inventoryButton.setText("INVENTORY");
        inventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(digitalMedium)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(phsyicalMedium)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(productType, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(usernameOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addProductButton)
                        .addGap(25, 25, 25)
                        .addComponent(inventoryButton)
                        .addGap(25, 25, 25)
                        .addComponent(buyButton)
                        .addGap(25, 25, 25))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addProductButton, buyButton, inventoryButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(productType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(digitalMedium)
                        .addComponent(phsyicalMedium)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buyButton)
                        .addComponent(addProductButton)
                        .addComponent(inventoryButton))
                    .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableMouseClicked
        IProduct product = getSelectedProduct();

        if (product != null) {
            if (evt.getClickCount() == 2) {
                WindowManager.ProductInfo.setUpForViewOrEdit(product, UserSystem.getLoggedInUser().isAdmin());
                WindowManager.ProductInfo.setVisible(true);
            }
        }
    }//GEN-LAST:event_itemTableMouseClicked

    private void inventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryButtonActionPerformed
        WindowManager.Inventory.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_inventoryButtonActionPerformed

    private void addProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductButtonActionPerformed
        WindowManager.ProductInfo.setUpForAdd(getSelectedMediumType(), getSelectedProductType());
        WindowManager.ProductInfo.setVisible(true);
    }//GEN-LAST:event_addProductButtonActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        addProductButton.setVisible(false);
        if (UserSystem.getLoggedInUser().isAdmin() == true) {
            addProductButton.setVisible(true);
        }

        usernameOutput.setText(UserSystem.getLoggedInUser().getName().toUpperCase() + " " + UserSystem.getLoggedInUser().getSurname().toUpperCase());

        refreshTableWithFilters();
    }//GEN-LAST:event_formWindowActivated

    private void productTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productTypeActionPerformed
        refreshTableWithFilters();
    }//GEN-LAST:event_productTypeActionPerformed

    private void phsyicalMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phsyicalMediumActionPerformed
        refreshTableWithFilters();
    }//GEN-LAST:event_phsyicalMediumActionPerformed

    private void digitalMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_digitalMediumActionPerformed
        refreshTableWithFilters();
    }//GEN-LAST:event_digitalMediumActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProductButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buyButton;
    private javax.swing.JRadioButton digitalMedium;
    private javax.swing.JButton inventoryButton;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel output;
    private javax.swing.JRadioButton phsyicalMedium;
    private javax.swing.JComboBox<String> productType;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchInput;
    private javax.swing.JLabel usernameOutput;
    // End of variables declaration//GEN-END:variables
}
